import psycopg2
from psycopg2.extras import RealDictCursor

def test_connection_direct():
    print("üß™ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    print("=" * 40)
    
    try:
        # –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ .env
        connection = psycopg2.connect(
            host="localhost",
            port=5432,
            database="mydatabase",
            user="postgres",
            password="1111",  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô –ü–ê–†–û–õ–¨
            cursor_factory=RealDictCursor
        )
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤–µ—Ä—Å–∏—é PostgreSQL
        cursor = connection.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"üìã –í–µ—Ä—Å–∏—è PostgreSQL: {version['version']}")
        
        cursor.close()
        connection.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å")
        print("2. PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")

if __name__ == "__main__":
    test_connection_direct()